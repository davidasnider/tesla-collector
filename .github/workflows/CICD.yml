name: Test Build Merge Deploy

on:
  pull_request:
  push:
    branches: [main]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0

  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      # Gitleaks check for secrets
      - name: Gitleaks
        uses: zricethezav/gitleaks-action@v1.1.4

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: 'main'
          fetch-depth: ''

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Set version tags
        id: build-prep
        run: |
          DOCKER_IMAGE=ghcr.io/davidasnider/tesla-collector/tesla
          VERSION=noop
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./src
          file: ./src/Dockerfile
          platforms: linux/amd64 #,linux/arm/v7
          push: true
          tags: ${{ steps.build-prep.outputs.tags }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1

    - name: Update kubernetes resources
      run: |
        echo TAGS!!!
        cat ${{ steps.build-prep.outputs.tags }}
        cd k8s/prod
        kustomize edit set image ghcr.io/davidasnider/tesla-collector/tesla:${VERSION}
        cat kustomization.yaml

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "Bump docker tag"

    - name: Push changes
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.exract_branch.outputs.branch }}

  pr-approve:
    runs-on: ubuntu-latest
    needs:
      - pre-commit
      - gitleaks
      - build
      - deploy
    steps:
      - uses: hmarr/auto-approve-action@v2.0.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

  label-pr:
    runs-on: ubuntu-latest
    needs:
      - pr-approve
    steps:
      - uses: christianvuerings/add-labels@v1.1
        with:
          labels: |
            automerge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  automerge:
    runs-on: ubuntu-latest
    needs:
      - label-pr
    steps:
      - name: automerge
        uses: "pascalgn/automerge-action@v0.10.0"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
